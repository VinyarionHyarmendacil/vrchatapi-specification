openapi: 3.0.3
info:
  title: permissions
  version: '1.0'
  description: 'Permissions are a way to individually grant specific access to a user, often through a license such as VRC+ subscription.'
paths:
  /auth/permissions:
    get:
      summary: Get Assigned Permissions
      operationId: getAssignedPermissions
      security:
        - authCookie: []
      responses:
        '200':
          $ref: ../responses/permissions/PermissionListResponse.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
      tags:
        - permissions
      description: Returns a list of all permissions currently granted by the user. Permissions are assigned e.g. by subscribing to VRC+.
    parameters: []
  /permissions:
    get:
      summary: Get Permissions
      tags:
        - permissions
      responses:
        '200':
          $ref: ../responses/permissions/PermissionListResponse.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
        '403':
          $ref: ../responses/InvalidAdminCredentialsError.yaml
      operationId: getPermissions
      security:
        - authCookie: []
      x-internal: true
      description: '**REQUIRES ADMIN CREDENTIALS**. Returns a list of all existing permissions, just like `/users` with empty search would.'
    post:
      summary: Create Permission
      operationId: createPermission
      security:
        - authCookie: []
      responses:
        '200':
          $ref: ../responses/permissions/PermissionResponse.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
        '403':
          $ref: ../responses/InvalidAdminCredentialsError.yaml
      x-internal: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                ownerId:
                  $ref: ../schemas/UserID.yaml
              required:
                - name
      description: '**REQUIRES ADMIN CREDENTIALS**. Creates and returns a new Permission. The permission will by default be owned by the sender of the request unless otherwise specified.'
      tags:
        - permissions
      parameters:
        - $ref: ../parameters.yaml#/number
        - $ref: ../parameters.yaml#/offset
        - schema:
            type: string
          in: query
          name: ownerId
          description: 'Owner of the Permission, MUST be valid UserID.'
  '/permissions/{permissionId}':
    parameters:
      - $ref: ../parameters.yaml#/permissionId
    get:
      summary: Get Permission
      tags:
        - permissions
      responses:
        '200':
          $ref: ../responses/permissions/PermissionResponse.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
      operationId: getPermission
      security:
        - authCookie: []
      description: 'Returns a single permission. This endpoint is pretty useless, as it returns the exact same information as `/auth/permissions`.'
    put:
      summary: Update Permission
      operationId: updatePermission
      security:
        - authCookie: []
      responses:
        '200':
          $ref: ../responses/permissions/PermissionResponse.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
        '403':
          $ref: ../responses/InvalidAdminCredentialsError.yaml
      x-internal: true
      description: '**REQUIRES ADMIN CREDENTIALS**. Updates the info on a permission.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                ownerId:
                  $ref: ../schemas/UserID.yaml
        description: ''
      tags:
        - permissions
    delete:
      summary: Delete Permission
      operationId: deletePermission
      security:
        - authCookie: []
      responses:
        '200':
          $ref: ../responses/permissions/PermissionResponse.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
        '403':
          $ref: ../responses/InvalidAdminCredentialsError.yaml
      description: '**REQUIRES ADMIN CREDENTIALS**. Deletes a permission.'
      x-internal: true
      tags:
        - permissions
tags:
  $ref: ../tags.yaml
components:
  securitySchemes:
    $ref: ../securitySchemes.yaml
