openapi: 3.0.3
info:
  title: miscellaneous
  version: '1.0'
  description: Miscellaneous endpoints that do not fit into any other category.
paths:
  /infoPush:
    get:
      summary: Show Information Notices
      tags:
        - miscellaneous
      responses:
        '200':
          $ref: ../responses/system/InfoPushListResponse.yaml
      operationId: getInfoPush
      description: |-
        IPS (Info Push System) is a system for VRChat to push out dynamic information to the client. This is primarily used by the Quick-Menu info banners, but can also be used to e.g. alert you to update your game to the latest version.

        `include` is used to query what Information Pushes should be included in the response. If include is missing or empty, then no notices will normally be returned. This is an "any of" search.

        `require` is used to limit what Information Pushes should be included in the response. This is usually used in combination with `include`, and is an "all of" search.
      parameters:
        - $ref: ../parameters.yaml#/require
        - $ref: ../parameters.yaml#/include
      x-badges:
        - color: gold
          label: 'Status: Early Access (Still Under Development)'
  /health:
    get:
      summary: Check API Health
      tags:
        - miscellaneous
      operationId: getHealth
      description: |-
        ~~Gets the overall health status, the server name, and the current build version tag of the API.~~

        **DEPRECATED:** VRChat has suddenly restricted this endpoint for unknown reasons, and now always return 401 Unauthorized.
      security: []
      responses:
        '200':
          $ref: ../responses/system/APIHealthResponse.yaml
      deprecated: true
  /config:
    get:
      summary: Fetch API Config
      tags:
        - miscellaneous
      responses:
        '200':
          $ref: ../responses/system/APIConfigResponse.yaml
      operationId: getConfig
      description: |-
        API config contains configuration that the clients needs to work properly.

        Currently the most important value here is `clientApiKey` which is used for all other API endpoints.
      security: []
  /visits:
    get:
      summary: Current Online Users
      tags:
        - miscellaneous
      responses:
        '200':
          $ref: ../responses/system/CurrentOnlineUsersResponse.yaml
      operationId: getCurrentOnlineUsers
      security: []
      description: |-
        Returns the current number of online users.

        **NOTE:** The response type is not a JSON object, but a simple JSON integer.
  /time:
    get:
      summary: Current System Time
      tags:
        - miscellaneous
      responses:
        '200':
          $ref: ../responses/system/SystemTimeResponse.yaml
      operationId: getSystemTime
      description: |-
        Returns the current time of the API server.

        **NOTE:** The response type is not a JSON object, but a simple JSON string.
      security: []
  /js/app.js:
    get:
      summary: Download JavaScript
      tags:
        - miscellaneous
      responses:
        '200':
          description: '**Note:** VRChat uses 302 Redirect to Cloudfront. The implementing library **must** support and follow redirects natively.'
          content:
            application/javascript:
              schema:
                type: string
        '400':
          $ref: ../responses/system/DownloadSourceCodeAccessError.yaml
      operationId: getJavaScript
      description: Fetches the JavaScript code to the frontend React website.
      parameters:
        - $ref: ../parameters.yaml#/variant
        - $ref: ../parameters.yaml#/branch
  /css/app.css:
    get:
      summary: Download CSS
      tags:
        - miscellaneous
      responses:
        '200':
          description: '**Note:** VRChat uses 302 Redirect to Cloudfront. The implementing library **must** support and follow redirects natively.'
          content:
            text/css:
              schema:
                type: string
        '400':
          $ref: ../responses/system/DownloadSourceCodeAccessError.yaml
      operationId: getCSS
      description: Fetches the CSS code to the frontend React website.
      parameters:
        - $ref: ../parameters.yaml#/variant
        - $ref: ../parameters.yaml#/branch
  /auth/permissions:
    get:
      summary: Get Assigned Permissions
      operationId: getAssignedPermissions
      security:
        - authCookie: []
      responses:
        '200':
          $ref: ../responses/permissions/PermissionListResponse.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
      tags:
        - miscellaneous
      description: Returns a list of all permissions currently granted by the user. Permissions are assigned e.g. by subscribing to VRC+.
    parameters: []
  /permissions:
    get:
      summary: Get Permissions
      tags:
        - miscellaneous
      responses:
        '200':
          $ref: ../responses/permissions/PermissionListResponse.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
        '403':
          $ref: ../responses/InvalidAdminCredentialsError.yaml
      operationId: getPermissions
      security:
        - authCookie: []
      x-internal: true
      description: '**REQUIRES ADMIN CREDENTIALS**. Returns a list of all existing permissions, just like `/users` with empty search would.'
    post:
      summary: Create Permission
      operationId: createPermission
      security:
        - authCookie: []
      responses:
        '200':
          $ref: ../responses/permissions/PermissionResponse.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
        '403':
          $ref: ../responses/InvalidAdminCredentialsError.yaml
      x-internal: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                ownerId:
                  $ref: ../schemas/UserID.yaml
              required:
                - name
      description: '**REQUIRES ADMIN CREDENTIALS**. Creates and returns a new Permission. The permission will by default be owned by the sender of the request unless otherwise specified.'
      tags:
        - miscellaneous
      parameters:
        - $ref: ../parameters.yaml#/number
        - $ref: ../parameters.yaml#/offset
        - schema:
            type: string
          in: query
          name: ownerId
          description: 'Owner of the Permission, MUST be valid UserID.'
  '/permissions/{permissionId}':
    parameters:
      - $ref: ../parameters.yaml#/permissionId
    get:
      summary: Get Permission
      tags:
        - miscellaneous
      responses:
        '200':
          $ref: ../responses/permissions/PermissionResponse.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
      operationId: getPermission
      security:
        - authCookie: []
      description: 'Returns a single permission. This endpoint is pretty useless, as it returns the exact same information as `/auth/permissions`.'
    put:
      summary: Update Permission
      operationId: updatePermission
      security:
        - authCookie: []
      responses:
        '200':
          $ref: ../responses/permissions/PermissionResponse.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
        '403':
          $ref: ../responses/InvalidAdminCredentialsError.yaml
      x-internal: true
      description: '**REQUIRES ADMIN CREDENTIALS**. Updates the info on a permission.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                ownerId:
                  $ref: ../schemas/UserID.yaml
        description: ''
      tags:
        - miscellaneous
    delete:
      summary: Delete Permission
      operationId: deletePermission
      security:
        - authCookie: []
      responses:
        '200':
          $ref: ../responses/permissions/PermissionResponse.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
        '403':
          $ref: ../responses/InvalidAdminCredentialsError.yaml
      description: '**REQUIRES ADMIN CREDENTIALS**. Deletes a permission.'
      x-internal: true
      tags:
        - miscellaneous
tags:
  $ref: ../tags.yaml
